# Word embeddings.
word2vec_300d {
  path = word2vec.txt
  size = 300
}
word2vec_300d_filtered {
  path = word2vec.txt.pd_NER8.filtered
  size = 300
}
word2vec_300d_filtered2 {
  path = word2vec.20181126.txt.filtered
  size = 300
}
word2vec_300d_2w {
  path = word2vec.txt
  size = 300
}
# YES NER
# Main configuration.
best {
  # Computation limits.
  max_top_antecedents = 50 #50
  max_training_sentences = 50
  top_span_ratio = 0.4 #0.4

  # Model hyperparameters.
  filter_widths = [3, 4, 5]
  filter_size = 50
  char_embedding_size = 0
  char_vocab_path = "char_vocab.korean8_pd_NER.txt"
  context_embeddings = ${word2vec_300d_filtered}
  head_embeddings = ${word2vec_300d_2w}
  contextualization_size = 100 #200
  contextualization_layers = 3
  ffnn_size = 100 #150
  ffnn_depth = 2
  feature_size = 10 #20
  max_span_width = 30
  use_metadata = false
  use_features = true
  use_NER = true
  use_mention = false
  mention_boundary = true
  model_heads = true
  coref_depth = 2
  lm_layers = 3
  lm_size = 1024
  coarse_to_fine = true
  mention_const = 0.5

  # Learning hyperparameters.
  max_gradient_norm = 5.0
  lstm_dropout_rate = 0.4
  lexical_dropout_rate = 0.5
  dropout_rate = 0.2
  optimizer = adam
  learning_rate = 0.001
  decay_rate = 0.999
  decay_frequency = 100

  # Other.
  train_path = data/train.korean_pd_NER.jsonlines
  eval_path = data/dev.korean_pd_NER.jsonlines
  conll_eval_path = data/dev.korean_pd_NER.v4_gold_conll
  lm_path = elmo_cache_pd_NER8.hdf5
  #train_path = data/train.pilot2.jsonlines
  #eval_path = data/dev.pilot2.jsonlines
  #conll_eval_path = data/dev.pilot2.v4_gold_conll
  #lm_path = elmo_cache.pilot2.hdf5
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  eval_frequency = 500
  report_frequency = 100
  log_root = logs
}

best2 {
  # Computation limits.
  max_top_antecedents = 50 #50
  max_training_sentences = 50
  top_span_ratio = 0.4 #0.4

  # Model hyperparameters.
  filter_widths = [3, 4, 5]
  filter_size = 50
  char_embedding_size = 0
  char_vocab_path = "char_vocab.20181126.txt"
  context_embeddings = ${word2vec_300d_filtered2}
  head_embeddings = ${word2vec_300d_2w}
  contextualization_size = 100 #200
  contextualization_layers = 3 
  ffnn_size = 100 #150
  ffnn_depth = 2
  feature_size = 10 #20
  max_span_width = 30
  use_metadata = false
  use_features = true
  use_NER = true 
  use_mention = false
  mention_boundary = true
  model_heads = true 
  coref_depth = 2
  lm_layers = 3 
  lm_size = 1024
  coarse_to_fine = true
  mention_const = 0.5
  
  # Learning hyperparameters.
  max_gradient_norm = 5.0
  lstm_dropout_rate = 0.4
  lexical_dropout_rate = 0.5
  dropout_rate = 0.2
  optimizer = adam
  learning_rate = 0.001
  decay_rate = 0.999
  decay_frequency = 100
  
  # Other.
  train_path = ./train.20181126.jsonlines
  eval_path = ./dev.20181126.jsonlines
  conll_eval_path = ./dev.20181126.v4_gold_conll
  lm_path = elmo_cache.20181126.hdf5
  #train_path = data/train.pilot2.jsonlines
  #eval_path = data/dev.pilot2.jsonlines
  #conll_eval_path = data/dev.pilot2.v4_gold_conll
  #lm_path = elmo_cache.pilot2.hdf5
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  eval_frequency = 500
  report_frequency = 100
  log_root = logs
}

# For evaluation. Do not use for training (i.e. only for predict.py, evaluate.py, and demo.py). Rename `best` directoryream_mdinal`.
model_final = ${best} {
  context_embeddings = ${word2vec_300d}
  head_embeddings = ${word2vec_300d_2w}
  lm_path = ""
  #eval_path = data/test.korean8_pd_NER.jsonlines
  #conll_eval_path = data/test.korean8_pd_NER.v4_gold_conll
  #eval_path = data/test.korean_pilot1_final_pd_NER.jsonlines
  #conll_eval_path = data/test.korean_pilot1_final_pd_NER.v4_gold_conll
}

# Baselines.
c2f_100_ant = ${best} {
  max_top_antecedents = 100
}
c2f_250_ant = ${best} {
  max_top_antecedents = 250
}
c2f_1_layer = ${best} {
  coref_depth = 2
}
c2f_3_layer = ${best} {
  coref_depth = 3
}
distance_50_ant = ${best} {
  max_top_antecedents = 50
  coarse_to_fine = false
  coref_depth = 1
}
distance_100_ant = ${distance_50_ant} {
  max_top_antecedents = 100
}
distance_250_ant = ${distance_50_ant} {
  max_top_antecedents = 250
}
